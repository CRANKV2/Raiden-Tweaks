#!/system/bin/sh
# veez21 @ xda-developers
# raidenkk @ telegram

# Magisk Module ID **
ID="RTKS"

# Detect root
_name=$(basename $0)
ls /data >/dev/null 2>&1 || { echo "$ID needs to run as root!"; echo "type 'su' then '$_name'"; exit 1; }

# Magisk Mod Directory
[ -d "/sbin/.magisk" ] && MOUNTPATH="/sbin/.magisk/modules" || MOUNTPATH="$(find /dev -mindepth 2 -maxdepth 2 -type d -name ".magisk")/modules"
MODDIR="$MOUNTPATH/$ID"
[ ! -d $MODDIR ] && { echo "[!] Raiden Tweaks missing..."; exit 1; }

# Set path to your busybox if applicable
_bb=

# Load mod-util.sh
. $MODDIR/mod-util.sh || exit $?

# Set Log Files
mount -o remount,rw /cache 2>/dev/null
mount -o rw,remount /cache 2>/dev/null
# > Logs should go in this file
LOG=/sdcard/RTKS/$ID.log
oldLOG=/sdcard/RTKS/$ID-old.log
# > Verbose output goes here
VERLOG=/sdcard/RTKS/$ID-verbose.log
oldVERLOG=/sdcard/RTKS/$ID-verbose-old.log
stdoutLOG=$MODDIR/logs/$ID-STDOUT.log
oldstdoutLOG=$MODDIR/logs/$ID-STDOUT-old.log

# Start Logging verbosely
mv -f $VERLOG $oldVERLOG 2>/dev/null; mv -f $LOG $oldLOG 2>/dev/null; mv -f $stdoutLOG $oldstdoutLOG 2>/dev/null
# exec 3>&1
# exec 1>$stdoutLOG
set -x 2>$VERLOG

rtks_prof=$(getprop persist.raidentweaks.mode)
 	
case "${rtks_prof}" in
1)
  rtks_prof=Thermal
  ;;

  2)
    rtks_prof=Battery
    ;;

     3)
      rtks_prof=Balanced
      ;;

       4)
        rtks_prof=Performance
        ;;

        5)
         rtks_prof=Gaming
         ;;
      esac

if [[ "$(getprop init.svc.thermal-engine)" == "running" ]] || [[ "$(getprop init.svc.mi_thermald)" == "running" ]] || [[ "$(getprop init.svc.thermald)" == "running" ]] || [[ "$(getprop init.svc.thermalservice)" == "running" ]] || [[ "$(getprop init.svc.thermanager)" == "running" ]]; then
    ts=On
elif [[ "$(getprop init.svc.thermal-engine)" == "stopped" ]] || [[ "$(getprop init.svc.mi_thermald)" == "stopped" ]] || [[ "$(getprop init.svc.thermald)" == "stopped" ]] || [[ "$(getprop init.svc.thermalservice)" == "stopped" ]] || [[ "$(getprop init.svc.thermanager)" == "stopped" ]]; then
      ts=Off
else
    ts=Unknown
fi

clear
Menu() {
    echo -e '\n'
    clear
    echo "${Y}|   This is the official Raiden Tweaks menu.   |${N}"
    echo "${Y}|  Created and written by raidenkk @ telegram  |${N}"
    echo " "
    echo "${Y}[*] Your current rom:${B} $(getprop ro.build.display.id) ${N}"
    echo " "
    echo "${Y}[*] Your current profile:${B} $rtks_prof ${N}"
    echo " "
    echo "${Y}[*] Version:${B} 3.2.2 - RX-7${N}"
    echo " "
    echo "${Y}[*] Thermal state:${B} $ts ${N}"
    echo " "
    echo "--------------------------------------------"
    echo "${C}[*] Profile selector! ${N}"
    echo "--------------------------------------------"
    echo " "
    echo "${C}[1] Thermal: Focused on making your device heat free, cold.${N}"
    echo " "
    echo "${B}[2] Battery: Focused on saving as much battery as possible.${N}"
    echo " "
    echo "${G}[3] Balanced: Focused on leaving the system balanced.${N}"
    echo " "
    echo "${Y}[4] Performance: Focused on maximizing your device's performance.${N}"
    echo " "
    echo "${R}[5] Gaming: Focused on improving your gaming/all performance.${N}"
    echo " "
    echo "--------------------------------------------"
    echo "${C}[*] Other options that might be helpful. ${N}"
    echo "--------------------------------------------"
    echo " "
    if [[ "$ts" == "On" ]]; then
    echo "${Y}[6] Disable thermal-engine ${C}(may heat the device)${N}"
    echo " "
elif [[ "$ts" == "Off" ]]; then
      echo "${Y}[6] Enable thermal-engine${N}"
      echo " "
fi
    echo "${Y}[7] Fstrim on some partitions ${C}(improves fluidity)${N}"
    echo " "
    echo "${Y}[8] Optimize application package ${C}(may take time)${N}"
    echo " "
    echo "${Y}[9] Clear RAM [ ${B}BASIC ${Y}] ${C}(This one will just drop all caches)${N}"
    echo " "
    echo "${Y}[10] Clear RAM [ ${B}HEAVY ${Y}] ${C}(This will drop cache and kill background apps)${N}"
    echo " "
    echo "${Y}[11] Clear RAM [ ${B}ADVANCED ${Y}] ${C}(This will drop cache and kill all apps)${N}"
    echo " "
    echo "${Y}[12] Clean up unnecessary files. ${C}(I.e. System logs, logs, debug...)${N}"
    echo " "
    echo "${Y}[13] Clear battery status ${C}(must be at 100%)${N}"
    echo " "
    echo "${Y}[14] Telegram group ${C}(to answer your questions)${N}"
    echo " "
    echo "${B}[15] About the module ${C}(information!)${N}"
    echo " "
    echo "${R}[0] Go out.${N}"
    echo " "
    echo -e '\n'
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Opcao1 ;; 
    2) Opcao2 ;;
    3) Opcao3 ;;
    4) Opcao4 ;;
    5) Opcao5 ;;
    6) Opcao6 ;;
    7) Opcao7 ;; 
    8) Opcao8 ;;
    9) Opcao9 ;;
    10) Opcao10 ;;
    11) Opcao11 ;;
    12) Opcao12 ;;
    13) Opcao13 ;;
    14) Opcao14 ;;
    15) Opcao15 ;;
    0) GoOut ;;
    *) Menu;;
    esac
    }

Opcao1 () {
    clear
    echo "${G}Putting the profile in thermal mode...${N}"
    sleep 2
    echo " "
    setprop persist.raidentweaks.mode "1"
    sleep 2
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao1 ;;
    esac
}

Opcao2 () {
    clear
    echo "${G}Putting the profile in battery mode...${N}"
    sleep 2
    echo " "
    setprop persist.raidentweaks.mode "2"
    sleep 2
    echo " "
    echo "${G}Process finished.${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao2  ;;
    esac
}

Opcao3 () {
    clear
    echo "${G}Putting the profile in balanced mode...${N}"
    sleep 2
    echo " "
    setprop persist.raidentweaks.mode "3"
    sleep 2
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao3  ;;
    esac
}

Opcao4 () {
    clear
    echo "${G}Putting the profile in performance mode...${N}"
    sleep 2
    echo " "
    setprop persist.raidentweaks.mode "4"
    sleep 2
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao4  ;;
    esac
}

Opcao5 () {
    clear
    echo "${G}Putting the profile in gaming mode...${N}"
    sleep 2
    echo " "
    setprop persist.raidentweaks.mode "5"
    sleep 2
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "Unknown command, sorry." ; echo ; Opcao5  ;;
    esac
}

Opcao6 () {
    clear
    if [[ "$ts" == "On" ]]; then
    echo "${G}Disabling thermal...${N}"
    sleep 2
    stop thermal-engine
    echo " "
    echo "${G}Process finished.${N}"
    echo " "
elif [[ "$ts" == "Off" ]]; then
    echo "${G}Enabling thermal...${N}"
    sleep 2
    start thermal-engine
    echo " "
    echo "${G}Process finished.${N}"
    echo " "
fi
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "Unknown command, sorry." ; echo ; Opcao6  ;;
    esac
}
    
Opcao7 () {
    clear
    echo "${G}Fstrim initializing, please wait. >.<${N}"
    echo " "
    fstrim -v /system
    fstrim -v /data
    fstrim -v /cache
    sleep 1
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao7 ;;
    esac
}

Opcao8 () {
    clear
    echo "${G}Optimizing application packages, please wait. >.<${N}"
    sleep 2
    echo " "
    echo "${G}[ ! ] this process can take between 5-10 minutes${N}"
    echo " "
    cmd package bg-dexopt-job
    echo " "
    echo "${G}Process finished.${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao8  ;;
    esac
}

Opcao9 () {
    clear
    echo "${G}Dropping all caches, wait, it's very fast ^^${N}"
    sleep 1
    sync
    echo "3" > "/proc/sys/vm/drop_caches"
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao9  ;;
    esac
}

Opcao10 () {
    clear
    echo "${G}Dropping caches and killing background processes, wait patiently... ^^${N}"
    sleep 1
    sync
    echo "3" > "/proc/sys/vm/drop_caches"
    am kill-all
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao10  ;;
    esac
}

Opcao11 () {
    clear
    echo "${G}Dropping all caches and killing all processes, wait there. ^^${N}"
    sleep 1
    sync
    echo "3" > "/proc/sys/vm/drop_caches"
    am kill-all
    sleep 3
    while IFS= read -r pkg_nm; do
    [[ "${pkg_nm}" != "com.termux" ]] && [[ "${pkg_nm}" != "jackpal.androidterm" ]] && [[ "${pkg_nm}" != "yarolegovich.materialterminal" ]] && [[ "${pkg_nm}" != "com.google.android.inputmethod.latin" ]] && [[ "${pkg_nm}" != "com.termoneplus" ]] && am force-stop "${pkg_nm}"
    done <<< "$(pm list packages -e -3 | grep package | cut -f 2 -d ":")"
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao11  ;;
    esac
}

Opcao12 () {
    clear
    echo "${G}Cleaning up all unnecessary junk, wait a minute ;)${N}"
    sleep 1
    cleaner 2>/dev/null
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao12  ;;
    esac
}

Opcao13 () {
    clear
    echo "${G}Clearing battery status, please wait. >.<${N}"
    sleep 1
    rm -f /data/system/batterystats.bin
    echo " "
    echo "${G}Process finished!${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao13  ;;
    esac
}

Opcao14 () {
    clear
    echo "${G}Access telegram group (support)${N}"
    sleep 2
    am start -a android.intent.action.VIEW -d https://t.me/rtksgroup
    clear
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "${R}Unknown command, sorry.${N}" ; echo ; Opcao14  ;;
    esac
}

Opcao15 () {
    clear
    echo "${G}Module informations:${N}"
    echo "${C}This module is focused on your experience, that's right, with this module you can choose several profiles according to your taste, enjoy your time with what you love to do, good luck!! Please give me feedback on my telegram :)${N}"
    echo " "
    echo "${B}[ 1 ] Return${N}"
    echo "${B}[ 0 ] Go out${N}"
    echo " "
    echo "[${C} Enter${N} ]: \c"
    read opcao
    case $opcao in
    1) Return ;;
    0) GoOut ;;
    *) "Unknown command, sorry." ; echo ; Opcao15  ;;
    esac
}

Return() {
    clear
    rtksmenu
}

GoOut() {
    clear
    echo "${B}Bye bye, see you next time.${N}"
    echo " "
    exit
}
clear
Menu